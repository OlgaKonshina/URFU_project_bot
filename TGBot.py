import telebot
import whisper
import os
import requests
import subprocess
import pytz
import yaml

with open(r'TGBot_config.yaml', 'r') as f:
    config = yaml.safe_load(f)

token = config['token']
bot = telebot.TeleBot(token)
p_timezone = pytz.timezone(config['timezone'])
timezone_common_name = config['timezone_common_name']


@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç ‚úåÔ∏è ,  –æ—Ç–ø—Ä–∞–≤—å –∞—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏–µ!\nHi ‚úåÔ∏è, send me a voice message!')


@bot.message_handler(commands=['help'])
def help_message(message):
    bot.send_message(message.chat.id, '–≠—Ç–æ—Ç –±–æ—Ç –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–∫—Å—Ç\n–ë–æ—Ç —Å–æ–∑–¥–∞–Ω –≤ —É—á–µ–±–Ω—ã—Ö '
                                      '—Ü–µ–ª—è—Ö\n\nThis bot translates voice messages into text\nThe bot was created for'
                                      ' educational purposes.')


@bot.message_handler(
    content_types=['audio', 'photo', 'video', 'document', 'text', 'location', 'contact', 'sticker'])
def exceptions(message):
    bot.send_message(message.from_user.id,
                     "–ù–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ, –Ω–æ –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ!üò≥\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /help\n\nNothing is clear, "
                     "but it is very interesting!üò≥ \nTry the /help commandüò≥")


@bot.message_handler(content_types=['voice'])
def get_audio_messages(message):
    bot.send_message(message.from_user.id, "Started recognition...")
    # –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        bot.send_message(message.from_user.id, "Continue recognition...")
        # –ù–∏–∂–µ –ø—ã—Ç–∞–µ–º—Å—è –≤—ã—á–ª–µ–Ω–∏—Ç—å –∏–º—è —Ñ–∞–π–ª–∞, –¥–∞ –∏ –≤–æ–æ–±—â–µ –±–µ—Ä–µ–º –¥–∞–Ω–Ω—ã–µ —Å –º–µ—Å—Å–∞–≥–∏
        file_info = bot.get_file(message.voice.file_id)
        print('file_info = ', file_info)
        path = file_info.file_path  # –í–æ—Ç —Ç—É—Ç-—Ç–æ –∏ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: voice/file_2.oga)
        fname = os.path.basename(path)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø—É—Ç—å –≤ –∏–º—è —Ñ–∞–π–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: file_2.oga)
        # print(fname)
        doc = requests.get('https://api.telegram.org/file/bot{0}/{1}'.format(token,
                                                                             file_info.file_path)) # –ü–æ–ª—É—á–∞–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
        with open(fname + '.oga', 'wb') as f:
            f.write(doc.content)  # –≤–æ—Ç –∏–º–µ–Ω–Ω–æ —Ç—É—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è —Å–∞–º–æ –∞—É–¥–∏–æ
        subprocess.run(['ffmpeg', '-i', fname + '.oga', fname + '.wav'])
        model = whisper.load_model('small')
        # print('model = ', model)
        bot.send_message(message.from_user.id, '–ó–∞–≥—Ä—É–∑–∏–ª–∏ –º–æ–¥–µ–ª—å\nLoaded the model')
        result = model.transcribe(fname + '.wav', fp16=False)  # –¥–æ–±–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        # print(result('text'))
        bot.send_message(message.from_user.id, "Finish recognition...")
        bot.send_message(message.from_user.id, result['text'])
    except Exception as e:
        bot.send_message(message.from_user.id,
                         "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –Ω–æ –Ω–∞—à–∏ —Å–º–µ–ª—ã–µ –∏–Ω–∂–µ–Ω–µ—Ä—ã —É–∂–µ —Ç—Ä—É–¥—è—Ç—Å—è –Ω–∞–¥ —Ä–µ—à–µ–Ω–∏–µ–º... üò£  \nSomething "
                         "went wrong, but our brave engineers are already working on a solution... üò£")
    finally:
        os.remove(fname + '.oga')
        os.remove(fname + '.wav')
        pass


@bot.message_handler(content_types=['video_note'])
def get_video_messages(message):
    bot.send_message(message.from_user.id, "Started recognition...")
    # –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        bot.send_message(message.from_user.id, "Continue recognition...")
        # –ù–∏–∂–µ –ø—ã—Ç–∞–µ–º—Å—è –≤—ã—á–ª–µ–Ω–∏—Ç—å –∏–º—è —Ñ–∞–π–ª–∞, –¥–∞ –∏ –≤–æ–æ–±—â–µ –±–µ—Ä–µ–º –¥–∞–Ω–Ω—ã–µ —Å –º–µ—Å—Å–∞–≥–∏
        file_info = bot.get_file(message.video_note.file_id)
        print('file_info = ', file_info)
        path = file_info.file_path  # –í–æ—Ç —Ç—É—Ç-—Ç–æ –∏ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: voice/file_2.oga)
        fname = os.path.basename(path)  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø—É—Ç—å –≤ –∏–º—è —Ñ–∞–π–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: file_2.oga)
        # print(fname)
        doc = requests.get('https://api.telegram.org/file/bot{0}/{1}'.format(token,
                                                                             file_info.file_path))  # –ü–æ–ª—É—á–∞–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏—Å–ª–∞–Ω–Ω—É—é –≥–æ–ª–æ—Å–≤—É—Ö—É
        with open(fname, 'wb') as f:
            f.write(doc.content)  # –≤–æ—Ç –∏–º–µ–Ω–Ω–æ —Ç—É—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è —Å–∞–º–∞ –∞—É–¥–∏–æ-–º–µ—Å—Å–∞–≥–∞
        subprocess.run(['ffmpeg', '-i', fname, fname[:-4] + '.wav'])

        model = whisper.load_model('small')
        print('model = ', model)
        bot.send_message(message.from_user.id, '–ó–∞–≥—Ä—É–∑–∏–ª–∏ –º–æ–¥–µ–ª—å\nLoaded the model')

        result = model.transcribe(fname[:-4] + '.wav', fp16=False)  # –¥–æ–±–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        print(result['text'])
        bot.send_message(message.from_user.id, "Finish recognition...")
        (bot.send_message(message.from_user.id, result['text']))

    except Exception as e:
        bot.send_message(message.from_user.id,
                         "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –Ω–æ –Ω–∞—à–∏ —Å–º–µ–ª—ã–µ –∏–Ω–∂–µ–Ω–µ—Ä—ã —É–∂–µ —Ç—Ä—É–¥—è—Ç—Å—è –Ω–∞–¥ —Ä–µ—à–µ–Ω–∏–µ–º... üò£ \nSomething "
                         "went wrong, but our brave engineers are already working on a solution... üò£")
    finally:
        os.remove(fname)
        os.remove(fname[:-4] + '.wav')
        pass


bot.polling(none_stop=True, interval=0)
